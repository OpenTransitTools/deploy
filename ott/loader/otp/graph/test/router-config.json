{
    timeouts: [7, 3, 2],
    includeOsmTags: true,

    //
    // Routing defaults are any public field or setter in the Java class
    // org.opentripplanner.routing.core.RoutingRequest
    // NOTE: updated Oct 2016 ... adds maxHours ... pretty much same as Conveyal (numItins not defined by them)
    //       updated Dec 2016 ... add disableAlertFiltering to show future alerts
    //       updated Feb 2017 ... add geoidElevation to fix the below sea-level with a regional offset
    //
    routingDefaults: {
        maxHours: 6,
        useRequestedDateTimeInMaxHours: true,
        boardSlack: 0,
        alightSlack: 0,
        transferSlack: 180,
        maxTransfers: 4,
        waitReluctance: 0.9,
        walkReluctance: 1.75,
        stairsReluctance: 1.65,
        numItineraries: 3,
        disableAlertFiltering: true,
        geoidElevation : true,
        invalidDateStrategy: "USE_CURRENT"
    },

    updaters: [
        {
          type: "real-time-alerts",
          frequencySec: 60,
          earlyStart: 864000,
          url: "http://trimet.org/transweb/ws/V1/FeedSpecAlerts/includeFuture/true",
          feedId: "TriMet"
        },
        {
          type: "stop-time-updater",
          frequencySec: 30,
          sourceType: "gtfs-http",
          url: "https://trimet.org/transweb/ws/V1/TripUpdate",
          feedId: "TriMet"
          // ???  WHAT IS THIS?  type: "websocket-gtfs-rt-updater"
        },
        {
          type: "bike-rental",
          frequencySec: 600,
          sourceType: "gbfs",
          url: "http://biketownpdx.socialbicycles.com/opendata"
        },
        {
          type: "transportation-network-company-updater",
          sourceType: "uber",
          serverToken: "<TK>",
          wheelChairAccessibleRideType: "0e9145be-98bb-48dd-a0bf-32964ac8df19"
        },
        {
          type: "transportation-network-company-updater",
          sourceType: "lyft",
          clientId: "<ID>",
          clientSecret: "<SEC>"
        },
        {
          type: "vehicle-rental-updater",
          frequencySec: 600,
          network: "BIRD",
          sourceType: "gbfs",
          url: "https://mds.bird.co/gbfs/portland",
          regionsUrl: "file:/home/otp/loader/ott/loader/otp/graph/config/regions/portland_OR/portland-boundary.geojson"
        },
        {
          type: "vehicle-rental-updater",
          frequencySec: 999,
          network: "LIME",
          sourceType: "gbfs",
          url: "https://data.lime.bike/api/partners/v1/gbfs/portland",
          regionsUrl: "file:/home/otp/loader/ott/loader/otp/graph/config/regions/portland_OR/lime-portland-boundary.geojson"
        },
        {
          type: "vehicle-rental-updater",
          frequencySec: 600,
          network: "RAZOR",
          sourceType: "gbfs",
          url: "http://razorapi.net/api/v1/gbfs/Portland",
          regionsUrl: "file:/home/otp/loader/ott/loader/otp/graph/config/regions/portland_OR/portland-boundary.geojson"
        },
        {
          type: "vehicle-rental-updater",
          frequencySec: 600,
          network: "SHARED",
          sourceType: "gbfs",
          url: "https://api.tryshared.com/mds",
          regionsUrl: "file:/home/otp/loader/ott/loader/otp/graph/config/regions/portland_OR/portland-boundary.geojson"
        },
        {
          type: "vehicle-rental-updater",
          frequencySec: 600,
          network: "SPIN",
          sourceType: "gbfs",
          url: "https://web.spin.pm/api/gbfs/v1/portland",
          regionsUrl: "file:/home/otp/loader/ott/loader/otp/graph/config/regions/portland_OR/portland-boundary.geojson"
        }
    ]
}
